class ProjectsController < ApplicationController
  
  layout "portfolio"
  
  # GET /projects
  # GET /projects.json
  def index
  	 @pagenav = Page.find_all_by_published('true')
  	 @categories = Category.order("name")
    @projects = Project.order("id").page(params[:page]).per(10)
  end
  
  def category
    @pagenav = Page.find_all_by_published('true')
  	 @projects = Project.order("id").where(:category_id => params[:id]).page(params[:page]).per(10)
 
    
    render :partial => 'category', :content_type => 'text/html', :layout => false
  end
  
  def slide
  		@pagenav = Page.find_all_by_published('true')
    	@project = Project.includes(:images).first()
    	raise ActiveRecord::RecordNotFound, "Page not found" if @project.nil?
    
    respond_to do |format|
      format.html # slide.html.erb
      format.json { render json: [@project]}
    end
  end
  
  def slides
  
  		@pagenav = Page.find_all_by_published('true')
    	@project = Project.includes(:images).find_by_permalink(params[:permalink])
    	raise ActiveRecord::RecordNotFound, "Page not found" if @project.nil?
    
    	#@project = Project.first()
    
    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: [@project]}
    end
  end
  
  def view
  
    # ... do something meaningful here ...
    
    @project = Project.includes(:images).find(params[:project_id])
    raise ActiveRecord::RecordNotFound, "Page not found" if @project.nil?
    #render :partial => 'view', :content_type => 'json' #text/html
    #render :json => { :text => {:attachmentPartial => render_to_string('projects/_view', :layout => false)}, :locals => { :page_title => @project.title, :thumbnails => @project.images } }
	 render :partial => 'view', :content_type => 'text/html', :layout => false 
  end

  # GET /projects/1
  # GET /projects/1.json
  def show
  	 @pagenav = Page.find_all_by_published('true')
    @project = Project.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @project }
    end
  end

  # GET /projects/new
  # GET /projects/new.json
  def new
  	@pagenav = Page.find_all_by_published('true')
    @project = Project.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @project }
    end
  end

  # GET /projects/1/edit
  def edit
  		@pagenav = Page.find_all_by_published('true')
    	@project = Project.find(params[:id])
  end

  # POST /projects
  # POST /projects.json
  def create
    @project = Project.new(params[:project])

    respond_to do |format|
      if @project.save
        format.html { redirect_to @project, notice: 'Project was successfully created.' }
        format.json { render json: @project, status: :created, location: @project }
      else
        format.html { render action: "new" }
        format.json { render json: @project.errors, status: :unprocessable_entity }
      end
    end
  end

  # PUT /projects/1
  # PUT /projects/1.json
  def update
    @project = Project.find(params[:id])

    respond_to do |format|
      if @project.update_attributes(params[:project])
        format.html { redirect_to @project, notice: 'Project was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @project.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /projects/1
  # DELETE /projects/1.json
  def destroy
    @project = Project.find(params[:id])
    @project.destroy

    respond_to do |format|
      format.html { redirect_to projects_url }
      format.json { head :no_content }
    end
  end
end
